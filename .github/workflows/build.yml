name: ci-build
'on':
  push: null
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup ndk
        run: |
          ndk_url=$(wget -qO- https://github.com/android/ndk/releases/latest | grep -e 'https://dl.google.com/android/repository/android-ndk-.*-linux.zip' | sed -n 's/.*<a href="\([^"]*\)".*/\1/p')
          wget -O ndk.zip $ndk_url -nv
          mkdir -p ~/ndk_temp
          unzip ndk.zip -d ~/ndk_temp 2>&1 > /dev/null
          mv ~/ndk_temp/*/* ~/ndk_temp
      - name: Cache Rust dependencies
        uses: actions/cache@v4
        id: cache-cargo
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ${{ env.CARGO_TARGET_DIR }}
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-
      - name: Setup Rust toolchains
        run: |
          rustup default nightly
          rustup target add aarch64-linux-android
          rustup component add rust-src
      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc-multilib
          cargo install cargo-ndk --locked
      - name: Build
        run: |
          export ANDROID_NDK_HOME=~/ndk_temp
          export ANDROID_NDK_ROOT=~/ndk_temp
          # 构建发布版本
          cargo ndk -t arm64-v8a build -r
          # 准备模块包
          cp target/aarch64-linux-android/release/gpugovernor module/
          rm -rf module/.git
          cd module/
          zip -r ../Mediatek_Mali_GPU_Governor.zip .
      - name: Upload
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          COMMIT_MESSAGE: |+
            🚀 **Mediatek Mali GPU Governor Build \#${{ github.run_number }}**
            📋 **Build Info:**
            Version: `v${CARGO_VERSION}`
            Commit: `${{ github.sha }}`
            Branch: `${{ github.ref_name }}`
            📝 **Commit Message:**
            ```
            ${{ github.event.head_commit.message  }}
            ```
            by `${{ github.event.head_commit.author.name }}`
            
            🔗 [View Workflow](${{ github.server_url }}/${{ github.repository
            }}/actions/runs/${{ github.run_id }})
        run: |
          MSG="${COMMIT_MESSAGE}"
          ESCAPED=$(python3 -c 'import sys, re; msg = sys.argv[1]; msg = re.sub(r"([_*\[\]()~`>#+\-=|{}.!])", r"\\\1", msg); msg = msg.replace("\n", "\\n"); print(msg)' "$MSG")

          curl -v "https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup" \
               -F "chat_id=${CHAT_ID}" \
               -F "message_thread_id=15" \
               -F "media=[{\"type\":\"document\",\"media\":\"attach://file\",\"parse_mode\":\"MarkdownV2\",\"caption\":\"${ESCAPED}\"}]" \
               -F "file=@Mediatek_Mali_GPU_Governor.zip"
